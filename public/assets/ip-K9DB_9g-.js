var f=Object.defineProperty;var m=(c,a,e)=>a in c?f(c,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[a]=e;var l=(c,a,e)=>m(c,typeof a!="symbol"?a+"":a,e);import{m as d}from"./module.esm-uXcmRlT3.js";import{b as p,t as g}from"./toast-C5YoKCAA.js";class w extends Error{constructor(a,e){super(e),this.response=a}}class C{constructor(){l(this,"base",null);l(this,"config",{toast:!0})}getDefaultHeaders(){return{"Content-Type":"application/json",Accept:"application/json"}}async request(a="GET",e,t={}){const o={method:a,headers:this.getDefaultHeaders()},s=p();return s&&(o.headers.Authorization=`Bearer ${s}`),d.store("workspace")&&(o.headers["X-Workspace-Id"]=d.store("workspace").id),e=e instanceof URL?e:new URL(((this.base||"")+"/"+e).replace(/([^:]\/)\/+/g,"$1"),window.location.origin),t.params&&(Object.keys(t.params).forEach(r=>e.searchParams.append(r,t.params[r])),delete t.params),t={...o,...t},t.body&&(t.body instanceof FormData?delete t.headers["Content-Type"]:t.body instanceof URLSearchParams?t.headers["Content-Type"]="application/x-www-form-urlencoded":t.headers["Content-Type"]==="application/json"&&typeof t.body!="string"&&(t.body=JSON.stringify(t.body))),fetch(e,{...o,...t}).then(async r=>{let u=r.clone();if(r.data={},r.headers.get("Content-Type")&&r.headers.get("Content-Type").toLocaleLowerCase().includes("application/json"))try{r.data=await u.json()}catch{}if(r.ok)return r;let i=r.data.message||null;throw this.config.toast&&i&&(g.error(i),window.modal.close()),new w(r,i||r.statusText)})}get(a,e={},t={}){return this.request("GET",a,{...t,params:e})}post(a,e={},t={}){return this.request("POST",a,{...t,body:e})}patch(a,e={},t={}){return this.request("PATCH",a,{...t,body:e})}put(a,e={},t={}){return this.request("PUT",a,{...t,body:e})}remove(a,e){return this.request("DELETE",a,e)}delete(a,e){return this.remove(a,e)}}const n="ip_location_cache",h=24*60*60*1e3;class L{static async getIpInfo(a=null){try{return await this.getIpLocation(a)}catch(e){return console.error("Error handling IP location:",e),null}}static async getIpLocation(a=null){const e=this.getLocationFromCache(a||"current");if(e)return e;const t=await fetch(`https://free.freeipapi.com/api/json/${a||""}`);if(!t.ok)throw new Error(`API returned ${t.status}`);const o=await t.json();if(!o.latitude||!o.longitude)throw new Error("Invalid location data received");return this.cacheLocation(a||"current",o),o}static getLocationFromCache(a){const e=JSON.parse(localStorage.getItem(n)||"{}"),t=Date.now();let o=!1;for(const r in e)t-e[r].timestamp>=h&&(delete e[r],o=!0);o&&localStorage.setItem(n,JSON.stringify(e));const s=e[a];return s&&t-s.timestamp<h?s.data:null}static cacheLocation(a,e){const t=JSON.parse(localStorage.getItem(n)||"{}");t[a]={data:e,timestamp:Date.now()},localStorage.setItem(n,JSON.stringify(t))}}export{C as A,L as I,w as a};
