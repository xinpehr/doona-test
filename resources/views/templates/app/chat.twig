{% extends "/layouts/main.twig" %}
{% set mobile_head_button = {
  link: 'app/chat' ~ (assistant is defined ? '/' ~ assistant.id : ''),
} %}


{% set img_types = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'] %}
{% set types = [] %}


{% if workspace.subscription.plan.config.tools.embedding_search is defined and workspace.subscription.plan.config.tools.embedding_search %}
	{% set types = types|merge([
  '.pdf',
  '.json',
  'text/*',
  '.doc',
  '.docx', 
  '.odt',
  '.xml',
  '.yml',
  '.yaml',
  '.csv',
  ]) %}
{% endif %}

{% set capabilities = ['embedding_search', 'google_search', 'web_scrap', 'generate_image']|filter(
  cap => option.features.tools[cap].is_enabled is defined 
  and option.features.tools[cap].is_enabled
  and workspace.subscription.plan.config.tools[cap] is defined 
  and workspace.subscription.plan.config.tools[cap]) %}

{% set adapters = [] %}
{% for service in config.model.registry.directory %}
	{% set models = [] %}

	{% for model in service.models %}
		{% if model.type == 'llm' %}
			{% set t = [] %}
			{% if model.config.vision %}
				{% set t = t|merge(img_types) %}
			{% endif %}
			{% if model.config.tools %}
				{% set t = t|merge(types) %}
			{% endif %}

			{% set models = models|merge([{
        model: model.key,
        name: (model.provider.name ?? service.name) ~ ' / ' ~ model.name,
        short_name: model.name,
				supports_image: model.config.vision,
				supports_calls: model.config.tools,
				file_types: t,
        is_available: model.enabled|default(false),
        is_enabled: workspace.subscription.plan.config.models[model.key] ?? false,
      }]) %}
		{% endif %}
	{% endfor %}

	{% if models|length > 0 %}
		{% set adapters = adapters|merge([{
      is_available: service.custom|default(false) or service.key == 'ollama' or option[service.key]|default(null) is not empty,
      models: models,
    }]) %}
	{% endif %}
{% endfor %}

{% set active_menu = '/app/assistants' %}
{% set xdata %}
chat(
`{{ model ?? option.features.chat.default_model ?? 'gpt-3.5-turbo' }}`,
{{ adapters|json_encode }},
{{ (assistant ?? null )|json_encode }},
{{ (conversation ?? null )|json_encode }},
)
{% endset %}
{% block title p__('title', 'Chat')|title %}

{% block sidebar %}
	<div class="hidden group-data-[key=history]/sidebar:block">
		<div class="flex items-center justify-between p-4 border-b border-line sticky top-0 bg-main z-10">
			<h2>{{ p__('heading', 'History') }}</h2>

			<button type="button" class="text-content-dimmed hover:text-content" @click="sidebar.close()" x-tooltip.raw.placement.left="{{ __('Close') }}">
				<i class="text-2xl ti ti-x"></i>
			</button>
		</div>

		<div>
			<template x-for="i in history" :key="i.id">
				<a :href="`app/chat/${i.id}`" class="flex gap-2 items-center p-4 border-b border-line-dimmed hover:bg-line-dimmed/50" :class="conversation?.id == i.id ? 'bg-line-dimmed/50' : ''" @click.prevent="select(i)">
					<x-avatar :title="i.title" class="shrink-0"></x-avatar>

					<div class="overflow-hidden">
						<div x-text="i.title || `{{ __('Untitled resource') }}`" class="overflow-hidden text-sm text-ellipsis text-nowrap max-w-full" :class="i.title ? '' : 'text-content-dimmed'"></div>

						<div class="flex">
							<x-time :datetime="i.created_at" data-type="date" class="text-xs text-content-dimmed"></x-time>
						</div>
					</div>
				</a>
			</template>

			<template x-if="!historyLoaded">
				<div class="my-8 flex justify-center">
					<button type="button" @click="fetchHistory()" class="font-semibold hover:underline text-sm">
						{{ __('Load more') }}
					</button>
				</div>
			</template>

			<template x-if="historyLoaded && history.length === 0">
				<div class="p-4 text-content-dimmed">
					{{ __('No conversations yet') }}
				</div>
			</template>
		</div>
	</div>
{% endblock %}

{% block toolbar %}
	<div class="absolute z-10 top-4 end-10 hidden md:flex gap-2 transition-all ease-in">
		<a href="app/chat" class="text-content-dimmed hover:text-content" x-tooltip.raw="{{ __('New chat') }}">
			<i class="text-2xl ti ti-square-rounded-plus"></i>
		</a>

		<a href="app/library/conversation" class="text-content-dimmed hover:text-content" x-tooltip.raw="{{ __('History') }}" @click.prevent="sidebar.open('history')">
			<i class="text-2xl ti ti-file-stack"></i>
		</a>
	</div>
{% endblock %}

{% block template %}
	<div class="flex flex-col gap-4 grow">
		<div class="relative" :class="conversation ? '' : 'flex justify-center my-auto'">
			<template x-if="!conversation">
				<div class="flex flex-col gap-6 my-10 text-center md:my-0">
					<div class="mx-auto w-16 h-16 bg-linear-to-br from-[#00A6FB] to-[#006ABF] tool-icon">
						<div class="bg-linear-to-br from-[#00A6FB] to-[#006ABF]"></div>

						{% include "snippets/icons/chat.twig" %}
					</div>

					<template x-if="assistant">
						<div>
							<h1 x-text="assistant.name"></h1>
							<p class="mt-1 text-lg font-light text-content-dimmed" x-text="assistant.description"></p>
						</div>
					</template>

					<template x-if="!assistant">
						<div>
							<h1>{{ p__('heading', 'AI Chat') }}</h1>
							<p class="mt-1 text-lg font-light text-content-dimmed">
								{{ __('Chat with AI bots and assistants') }}
							</p>
						</div>
					</template>
				</div>
			</template>

			<template x-if="conversation">
				<div class="flex flex-col gap-4">
					<div class="grow">
						<div class="text-xl autogrow-textarea font-editor-heading" :data-replicated-value="conversation.title">
							<textarea placeholder="{{ __('Untitled resource') }}" autocomplete="off" x-model="conversation.title" rows="1" @input.debounce.750ms="save(conversation)" class="block px-0 py-0 w-full bg-transparent border-0 ring-0 transition-colors appearance-none outline-none resize-none placeholder:text-content-dimmed placeholder:opacity-50 read-only:text-content-dimmed"></textarea>
						</div>

						<div class="mt-1">
							<x-uuid x-text="conversation.id"></x-uuid>
						</div>
					</div>

					<div class="flex gap-4 items-center">
						<div class="flex gap-4 items-center me-auto">
							{% include "snippets/audience.twig" with {ref: 'conversation'} %}

							<span class="flex gap-1 items-center text-sm text-content-dimmed">
								<i class="text-base ti ti-coins"></i>
								<x-credit :data-value="conversation.cost" format="{{ __(":count credits") }}"></x-credit>
							</span>
						</div>

						<button @click="modal.open('delete-modal');" class="flex gap-1 items-center text-sm transition-all text-content-dimmed hover:text-content group">
							<i class="text-xl ti ti-trash group-hover:text-failure"></i>
						</button>
					</div>

					<div class="flex flex-col gap-6 md:gap-10 mt-6">
						<template x-for="node in tree">
							<div class="last:min-h-[calc(100vh-18rem)] lg:last:min-h-[calc(100vh-15.5rem)]">
								{% include "snippets/cards/message.twig" with { ref: 'node.children[node.index]'} %}

								<template x-if="node.children.length > 1">
									<div class="flex gap-1 items-center ps-8 mt-2 text-xs text-content-dimmed">
										<button type="button" :disabled="node.index==0" @click="generateTree(node.children[node.index-1].id || null)" class="hover:text-content">
											<i class="text-xs ti ti-chevron-left rtl:rotate-180 block"></i>
										</button>

										<span>
											<span x-text="node.index+1"></span>
											<span>/</span>
											<span x-text="node.children.length"></span>
										</span>

										<button type="button" :disabled="node.index+1 >= node.children.length" @click="generateTree(node.children[node.index+1].id || null)" class="hover:text-content">
											<i class="text-xs ti ti-chevron-right rtl:rotate-180 block"></i>
										</button>
									</div>
								</template>
							</div>
						</template>
					</div>
				</div>
			</template>

			<button x-ref="quote" class="hidden absolute top-0 left-1/2 z-40 gap-1 justify-center items-center px-2 py-1 -mt-8 h-6 text-sm font-bold rounded-md border shadow-md border-line bg-main" x-tooltip.raw="{{ __('Reply') }}" @click="selectQuote">
				<i class="text-lg ti ti-corner-down-right"></i>
				{{ p__('button', 'Reply') }}
			</button>
		</div>
	</div>

	<modal-element name="delete-modal">
		<template x-if="conversation">
			<form class="flex flex-col gap-6 items-center modal" @submit.prevent="remove(conversation);">
				<div class="flex relative justify-center items-center mx-auto w-24 h-24 rounded-full text-failure/25">
					<svg class="absolute top-0 left-0 w-full h-full" width="112" height="112" viewbox="0 0 112 112" fill="none" xmlns="http://www.w3.org/2000/svg">
						<circle cx="56" cy="56" r="55.5" stroke="currentColor" stroke-dasharray="8 8"/>
					</svg>

					<div class="flex justify-center items-center w-20 h-20 text-4xl rounded-full transition-all bg-failure/25 text-failure">
						<i class="text-4xl ti ti-trash"></i>
					</div>
				</div>

				<div class="flex flex-col gap-2 items-center text-center">
					<div class="text-lg text-center">
						{{ __('Do you really want to delete the conversation?') }}
					</div>

					<p class="text-sm text-content-dimmed">
						{{ __('All associated content and files will be permanently removed. This action cannot be reverted once confirmed.') }}
					</p>
				</div>

				<div class="flex gap-4 justify-center items-center">
					<button class="button button-outline" @click="modal.close()" type="button">
						{{ p__('button', 'No, cancel') }}
					</button>

					<button class="button button-failure" type="submit" :processing="isDeleting">
						{% include "/snippets/spinner.twig" %}

						{{ p__('button', 'Yes, delete') }}
					</button>
				</div>
			</form>
		</template>
	</modal-element>

	<modal-element name="options">
		<form @submit.prevent="applyOptions" class="flex flex-col gap-6 modal">
			<div class="flex justify-between items-center">
				<h2 class="text-xl">{{ p__('heading', 'Options') }}</h2>

				<button class="flex justify-center items-center w-8 h-8 rounded-full border border-transparent bg-line-dimmed hover:border-line" @click="modal.close()" type="button">
					<i class="text-xl ti ti-x"></i>
				</button>
			</div>

			<div>
				<label>{{ p__('label', 'Model & assistant') }}</label>

				<button type="button" class="flex relative gap-2 items-center mt-1 w-full text-start box hover:border-line group" @click="modal.open('assistant-list-modal')">
					<x-avatar class="mt-0.5" :icon="options.assistant ? 'box' : 'sparkles'" :src="options.assistant ? options.assistant.avatar : `{{ option.features.chat.avatar is defined and option.features.chat.avatar ? option.features.chat.avatar : null }}`"></x-avatar>

					<div class="grow">
						<div class="flex gap-2 items-start">
							<h3 x-text="options.assistant ? options.assistant.name : `{{ option.features.chat.name ?? 'AI' }}`" class="line-clamp-1"></h3>
						</div>

						<template x-if="options.assistant && options.assistant.expertise">
							<div class="text-sm text-content-dimmed" x-text="options.assistant.expertise"></div>
						</template>

						<template x-if="!options.assistant">
							<div class="text-sm text-content-dimmed">
								{{ __('Universal AI bot') }}
							</div>
						</template>
					</div>

					<i class="mt-1 text-2xl ti ti-selector text-content-dimmed"></i>
				</button>

				<select class="mt-2 input border-line-dimmed hover:border-line" x-model="options.model">
					<template x-for="a in adapters">
						<option :value="a.model" x-text="a.name"></option>
					</template>
				</select>
			</div>

			<div>
				<button type="submit" class="w-full button">
					{{ p__('button', 'Confirm') }}
				</button>
			</div>
		</form>
	</modal-element>

	<modal-element name="assistant-list-modal">
		<div class="flex flex-col gap-6 modal">
			<div class="flex justify-between items-center">
				<h2 class="text-xl">{{ p__('heading', 'Assistants') }}</h2>

				<button class="flex justify-center items-center w-8 h-8 rounded-full border border-transparent bg-line-dimmed hover:border-line" @click="modal.close()" type="button">
					<i class="text-xl ti ti-x"></i>
				</button>
			</div>

			<div>
				<input type="text" class="mt-2 input" placeholder="{{ __('Search assistants') }}" x-model="query">
			</div>

			<div class="flex flex-col gap-1 pe-1 overflow-y-scroll max-h-[424px]">

				<div class="flex relative gap-2 items-start box hover:border-line group">

					<button type="button" class="absolute top-0 left-0 w-full h-full opacity-0" @click="options.assistant = null; modal.open('options')"></button>

					<x-avatar icon="sparkles" :src="`{{ option.features.chat.avatar is defined and option.features.chat.avatar ? option.features.chat.avatar : null }}`"></x-avatar>

					<div class="grow">
						<div class="flex gap-2 items-start">
							<h3 class="line-clamp-1">
								{{ option.features.chat.name ?? 'AI' }}
							</h3>

							<template x-if="assistant">
								<span class="flex invisible ms-auto whitespace-nowrap badge group-hover:visible shrink-0">
									{{ p__('button', 'Select') }}
								</span>
							</template>

							<template x-if="!assistant">
								<span class="ms-auto badge badge-success">
									{{ p__('badge', 'Selected') }}
								</span>
							</template>
						</div>

						<div class="text-sm">
							{{ __('Universal AI bot') }}
						</div>
					</div>
				</div>

				<template x-for="v in assistants" :key="v.id">
					<template x-if="doesAssistantMatch(v, query)">
						<div class="flex relative gap-2 items-start box hover:border-line group">

							<button type="button" class="absolute top-0 left-0 w-full h-full opacity-0" @click="options.assistant = v; options.model = v.model || options.model; modal.open('options')"></button>

							<x-avatar icon="box" :src="v.avatar" :title="v.name"></x-avatar>

							<div class="grow">
								<div class="flex gap-2 items-start">
									<h3 x-text="v.name" class="line-clamp-1"></h3>

									<template x-if="!assistant || assistant.id != v.id">
										<span class="flex invisible ms-auto whitespace-nowrap badge group-hover:visible shrink-0">
											{{ p__('button', 'Select') }}
										</span>
									</template>

									<template x-if="assistant && assistant.id == v.id">
										<span class="ms-auto badge badge-success">
											{{ p__('badge', 'Selected') }}
										</span>
									</template>
								</div>

								<template x-if="v.expertise">
									<div class="text-sm" x-text="v.expertise"></div>
								</template>

								<template x-if="v.description">
									<div class="mt-2 text-xs text-content-dimmed" x-text="v.description"></div>
								</template>
							</div>
						</div>
					</template>
				</template>
			</div>
		</div>
	</modal-element>
{% endblock %}


{% block footer %}
	<div class="sticky bottom-0 z-40 mt-auto">
		<div class="h-8 to-transparent bg-linear-to-t from-main"></div>

		<div class="bg-main">
			<form @submit.prevent="{{ workspace.subscription.plan.config.chat.is_enabled is defined and workspace.subscription.plan.config.chat.is_enabled ? 'submit' : '' }}">
				<template x-if="adapter && adapter.file_types.length > 0">
					<x-dropzone>
						<input type="file" @change="file = $refs.file.files[0];" name="file" :accept="adapter.file_types.join(',')" class="hidden" x-ref="file">

						<div class="flex flex-col gap-6 items-center">
							<i class="text-6xl ti ti-upload text-content-dimmed"></i>
							<div class="flex flex-col gap-2 text-center max-w-[30rem]">
								<h2>{{ p__('heading', 'Drop the file here') }}</h2>

								<div class="text-sm text-content-dimmed" x-text="adapter.file_types.join(', ')"></div>
							</div>
						</div>
					</x-dropzone>
				</template>

				<div class="flex items-center gap-2 py-3">
					<button type="button" class="flex items-center" @click="showOptions(null, 'assistant-list-modal');" x-tooltip.placement="assistant ? assistant.name : `{{ option.features.chat.name|default(p__('heading', 'AI Chat')) }}`">
						<template x-if="assistant">
							<x-avatar length="1" class="avatar-sm hover:outline-line-dimmed hover:outline-offset-1 hover:outline-2" :src="assistant.avatar" icon="box"></x-avatar>
						</template>

						<template x-if="!assistant">
							<x-avatar length="1" class="avatar-sm hover:outline-line-dimmed hover:outline-offset-1 hover:outline-2" src="{{ option.features.chat.avatar|default(null) }}" icon="box"></x-avatar>
						</template>
					</button>

					<template x-if="adapter">
						<button type="button" class="capitalize button button-xs button-dimmed" @click="showOptions()">
							<span x-text="adapter.short_name"></span>
							<i class="ti ti-caret-up-down-filled text-xs"></i>
						</button>
					</template>

					<div class="flex gap-1 items-center">
						<template x-if="adapter && adapter.supports_image">
							<i class="text-base cursor-auto ti ti-photo text-content-dimmed hover:text-content" x-tooltip.raw="{{ __('AI vision enabled') }}"></i>
						</template>

						{% if capabilities|length > 0 %}
							<template x-if="adapter && adapter.supports_calls">
								<i class="text-base cursor-auto ti ti-bolt text-content-dimmed hover:text-content" x-tooltip.raw="{{ __('Supercharged') }}"></i>
							</template>
						{% endif %}
					</div>
				</div>

				<div class="relative p-1 rounded-3xl bg-line-dimmed has-[textarea:focus]:bg-linear-to-br has-[textarea:focus]:from-gradient-from has-[textarea:focus]:to-gradient-to">
					<template x-if="quote">
						<div class="flex gap-2 items-start p-2 pl-4 text-sm rounded-t-[1.25rem] bg-line-super-dimmed text-content-dimmed">

							<i class="w-6 text-base text-center ti ti-corner-down-right mt-0.5"></i>

							<div x-html="quote" class="overflow-y-auto max-h-24 grow"></div>

							<button type="button" @click="quote=null" class="flex justify-center items-center w-10 hover:text-content mt-0.5">
								<i class="text-base ti ti-x"></i>
							</button>
						</div>
					</template>

					<div class="flex gap-2 items-end p-2 rounded-[1.25rem] bg-main" :class="{'pl-4': !adapter || adapter.file_types.length <= 0, 'rounded-t-none' : quote }">
						<template x-if="adapter && adapter.file_types.length > 0">
							<div>
								<template x-if="!file">
									<button type="button" class="flex justify-center items-center w-10 h-10 text-content-dimmed hover:text-content" @click="$refs.file.click()">
										<i class="text-2xl -rotate-45 ti ti-paperclip"></i>
									</button>
								</template>

								<template x-if="file">
									<button type="button" class="flex relative p-0 w-10 h-10 button button-dimmed group rounded-xl" @click="file=null; $refs.file.value=null; " x-tooltip="file.name">
										<template x-if="file.type.startsWith('image/')">
											<img :src="file ? URL.createObjectURL(file) : null" class="object-cover absolute top-0 left-0 w-full h-full rounded-lg">
										</template>

										<template x-if="!file.type.startsWith('image/')">
											<i class="ti ti-file-filled"></i>
										</template>

										<div class="hidden absolute top-0 left-0 justify-center items-center w-full h-full rounded-xl bg-content/50 text-main group-hover:flex">
											<i class="text-base rounded-full ti ti-circle-x-filled bg-content"></i>
										</div>
									</button>
								</template>
							</div>
						</template>

						<div class="overflow-y-auto pt-2 mb-2 max-h-36 autogrow-textarea text-content grow" :data-replicated-value="prompt">
							<textarea placeholder="{{ __('Type a prompt here...') }}" autocomplete="off" rows="1" x-model="prompt" x-ref="prompt" class="block p-0 text-base bg-transparent border-none focus:ring-0 placeholder:text-content-dimmed" required @keydown.enter="{{ workspace.subscription.plan.config.chat.is_enabled is defined and workspace.subscription.plan.config.chat.is_enabled ? 'enter' : '' }}" @paste="paste"></textarea>
						</div>

						<div class="flex gap-2 items-center ms-auto">
							{% if workspace.subscription.plan.config.chat.is_enabled is defined and workspace.subscription.plan.config.chat.is_enabled %}
								<template x-if="adapter">
									<button type="button" class="p-0 w-10 h-10 button button-accent rounded-xl" :processing="isProcessing" :disabled="!prompt" @click.prevent.stop="submit">
										{% include "/snippets/spinner.twig" %}

										<template x-if="!isProcessing">
											<i class="ti ti-arrow-up"></i>
										</template>
									</button>
								</template>

								<template x-if="!adapter">
									<a href="app/billing" class="p-0 w-10 h-10 button button-dimmed rounded-xl" x-tooltip.raw="{{ __('Upgrade your plan') }}">
										<i class="ti ti-lock-up"></i>
									</a>
								</template>
							{% else %}
								<a href="app/billing" class="p-0 w-10 h-10 button button-dimmed rounded-xl" x-tooltip.raw="{{ __('Upgrade your plan') }}"></a>
							{% endif %}
						</div>
					</div>
				</div>
			</form>

			{% include "/sections/footer.twig" %}
		</div>
	</div>
{% endblock %}
